class Carrito:
    def __init__(self):
        self.productos = {}
        self.cantidad = 0
        self.total = 0
        self.cap_max = 15
        self.stock = {  # Productos con stock limitado
            "Pan": {"precio": 30.0, "stock": 20},
            "Leche": {"precio": 20.0, "stock": 15},
            "Huevo": {"precio": 40.0, "stock": 50},
            "Jitomate": {"precio": 25.0, "stock": 30},
            "Lechuga": {"precio": 10.0, "stock": 10},
            "Arroz": {"precio": 26.0, "stock": 25},
            "Azucar": {"precio": 20.0, "stock": 20},
            "Sal": {"precio": 20.0, "stock": 40},
        }

    def modificar_carrito(self, nombre, precio, cantidad):
        """
        Agrega o elimina productos del carrito.
        Si cantidad > 0, agrega productos.
        Si cantidad < 0, elimina productos.
        """
        if cantidad > 0:  # Agregar productos
            if nombre not in self.stock:
                print(f"El producto '{nombre}' no está disponible.")
                return
            
            if self.cantidad + cantidad > self.cap_max:
                print(f"No se pueden agregar {cantidad} unidades. Carrito lleno.")
                return
            
            if self.stock[nombre]["stock"] < cantidad:
                print(f"No hay suficiente stock de '{nombre}'. Disponible: {self.stock[nombre]['stock']}")
                return
            
            if nombre in self.productos:
                self.productos[nombre]['cantidad'] += cantidad
            else:
                self.productos[nombre] = {'precio': precio, 'cantidad': cantidad}
            
            self.cantidad += cantidad
            self.total += precio * cantidad
            self.stock[nombre]["stock"] -= cantidad
        elif cantidad < 0:  # Eliminar productos
            if nombre in self.productos:
                cantidad_a_eliminar = min(-cantidad, self.productos[nombre]['cantidad'])
                self.productos[nombre]['cantidad'] -= cantidad_a_eliminar
                self.cantidad -= cantidad_a_eliminar
                self.total -= self.productos[nombre]['precio'] * cantidad_a_eliminar
                self.stock[nombre]["stock"] += cantidad_a_eliminar
                
                if self.productos[nombre]['cantidad'] <= 0:
                    del self.productos[nombre]
            else:
                print(f"El producto '{nombre}' no está en el carrito.")

    def aplicar_descuentos(self):
        """
        Aplica descuentos al carrito:
        - 2x1 en ciertos artículos.
        - 10% de descuento si se compran más de 10 artículos.
        """
        descuento_total = 0
        productos_2x1 = ["Leche", "Pan"]  # Ejemplo de productos con 2x1

        for nombre, datos in self.productos.items():
            if nombre in productos_2x1:
                descuento_total += (datos['cantidad'] // 2) * datos['precio']
        
        if self.cantidad > 10:
            descuento_total += self.total * 0.10
        
        self.total -= descuento_total
        print(f"Se aplicaron descuentos por un total de: ${descuento_total:.2f}")

    def pagar(self, metodo_pago, monto_efectivo=0):
        """
        Permite pagar el total del carrito.
        - Si se paga con tarjeta, aplica un 3% de comisión.
        - Si se paga con efectivo, calcula y regresa el cambio.
        """
        if metodo_pago == "tarjeta":
            total_con_comision = self.total * 1.03
            print(f"Total con comisión del 3%: ${total_con_comision:.2f}")
        elif metodo_pago == "efectivo":
            if monto_efectivo < self.total:
                print("Monto insuficiente para pagar.")
                return
            cambio = monto_efectivo - self.total
            print(f"Pago recibido. Su cambio es: ${cambio:.2f}")
        else:
            print("Método de pago no válido.")
            return
        
        # Reiniciar el carrito después del pago
        self.productos = {}
        self.cantidad = 0
        self.total = 0
        print("Gracias por su compra. El carrito ha sido vaciado.")

    def mostrar(self):
        print("\n==== CARRITO ====")
        print(self.productos)
        print(f"Total de productos: {self.cantidad} - Total a pagar: ${self.total:.2f}")
        print("\n==== STOCK DISPONIBLE ====")
        for nombre, datos in self.stock.items():
            print(f"{nombre}: {datos['stock']} unidades disponibles")

# Función para mostrar el menú interactivo
def menu_interactivo():
    carrito = Carrito()
    while True:
        print("\n==== MENÚ ====")
        print("1. Agregar producto")
        print("2. Eliminar producto")
        print("3. Mostrar carrito y stock")
        print("4. Aplicar descuentos")
        print("5. Pagar")
        print("6. Salir")
        opcion = input("Seleccione una opción: ")

        if opcion == "1":
            nombre = input("Ingrese el nombre del producto: ")
            if nombre not in carrito.stock:
                print("Producto no disponible.")
                continue
            precio = carrito.stock[nombre]["precio"]
            cantidad = int(input("Ingrese la cantidad a agregar: "))
            carrito.modificar_carrito(nombre, precio, cantidad)
        elif opcion == "2":
            nombre = input("Ingrese el nombre del producto a eliminar: ")
            cantidad = int(input("Ingrese la cantidad a eliminar: "))
            carrito.modificar_carrito(nombre, 0, -cantidad)
        elif opcion == "3":
            carrito.mostrar()
        elif opcion == "4":
            carrito.aplicar_descuentos()
        elif opcion == "5":
            metodo_pago = input("Ingrese el método de pago (efectivo/tarjeta): ").lower()
            if metodo_pago == "efectivo":
                monto_efectivo = float(input("Ingrese el monto en efectivo: "))
                carrito.pagar(metodo_pago, monto_efectivo)
            elif metodo_pago == "tarjeta":
                carrito.pagar(metodo_pago)
            else:
                print("Método de pago no válido.")
        elif opcion == "6":
            print("Saliendo del programa. ¡Gracias por usar el carrito!")
            break
        else:
            print("Opción no válida. Intente de nuevo.")

# Ejecutar el menú interactivo
if __name__ == "__main__":
    menu_interactivo()